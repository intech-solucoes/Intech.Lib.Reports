@page {
    /*
     * Size can be a length (not a percentage) for width and height
     * or a standard page size such as:
     * a4, a5, a3, b3, b4, letter, legal, ledger.
     * A standard page size can be followed by either 'portrait' or 'landscape'.
     *
     * In theory, you can use different page sizes in one document, but this renderer
     * currently uses the first page width as the width of the body. That means it
     * is only practical to use different page heights in the one document.
     * See danfickle/openhtmltopdf#176 or #119 for more information.
     */
    size: 500px 1000px;

    /*
     * Margin box for each page. Accepts one-to-four values, similar
     * to normal margin property.
     */
    margin: 50px;
    /*
     * Boxes to sit in the margin area. Can be one of:
     * top-left-corner, top-left, top-center, top-right, top-right-corner
     * bottom-left-corner, bottom-left, bottom-center, bottom-right, bottom-right-corner
     * left-top, left-middle, left-bottom,
     * right-top, right-middle, right-bottom.
     *
     * Useful for things such as page counters, etc.
     */
    @top-left {
        content: counter(page);
    }

    @bottom-center {
        content: 'You are on ' counter(page) ' of ' counter(pages);
    }

    @bottom-right {
        /* We can also place an element in a margin box. This allows for formatting
         * of content in the margin box. The element must have a position of a named
         * running position. Any name can be used, provided it is a valid CSS identifier.
         * See danfickle/openhtmltopdf#352 for multi line header example with rich formatting.
         */
        content: element(header);
    }
}

/* Possible pseudo page matchers are first, left and right.
 * By convention the first page is right. 
 */
@page:first {
    @top-center {
        content: 'first';
    }
}

@page:left {
    @top-right {
        content: 'left';
    }
}

@page:right {
    @bottom-left {
        content: 'right';
    }
}

/*
 * An element can be placed on a named page. Any name can be used provided it is
 * a valid CSS identifier. Elements are placed on this page using the page property.
 */
@page named {
    @top-center {
        content: 'You are on a named page for a change!';
    }
}

/* The body margin is in addition to the page margin,
 * but the top body margin only applies to the first page and
 * the bottom margin to the last page.
 */
body {
    margin: 0;
}

.page-break {
    page-break-after: always;
}

named-page {
    page-break-before: always;
    /* The page property allows us to marry up an element with a @page rule. */
    page: named;
    display: block;
}
